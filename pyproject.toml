[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[project]
name = "sct"
description = "SCT is the Aresys Python module for SAR products quality analysis."
authors = [{ name = "Aresys S.R.L.", email = "info@aresys.it" }]
license = { text = "MIT" }
classifiers = [
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries",
    "Topic :: Utilities",
    "License :: OSI Approved :: MIT License",
]
requires-python = ">= 3.10"
dependencies = [
    "numpy<2",
    "pandas",
    "jsonschema",
    "toml",
    "pyproj",
    "shapely",
    "h5py",
    "s1etad",
    "art",
    "appdirs",
    "arepytools",
    "arepyextras-quality",
    "arepyextras-perturbations",
    "arepyextras-eo_products",
    "scipy<1.14"
]
dynamic = ["version"]

[project.optional-dependencies]
heritage = ["arepyextras-eo_products[heritage]"]
cli = ["click", "requests"]
graphs = ["matplotlib", "plotly"]
dev = ["black", "isort", "pylint"]
test = ["unittest-xml-reporting", "coverage"]
doc = [
    "ipython",
    "nbsphinx",
    "sphinx",
    "sphinx-design",
    "sphinx-copybutton",
    "pydata-sphinx-theme",
]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.scripts]
sct = "sct.__main__:main"
sct-rosamond-data-to-csv = "sct.cli.utility_commands_cli:convert_rosamond_csv"
sct-ionospheric-maps-download = "sct.cli.utility_commands_cli:download_ionex_tec_maps"
sct-tropospheric-maps-download = "sct.cli.utility_commands_cli:download_tropospheric_vmf3_maps"

[tool.setuptools]
license-files = ["LICENSE.txt"]
include-package-data = true

[tool.setuptools.packages.find]
exclude = ["tests", "tests*"]
namespaces = true

[tool.setuptools.dynamic]
version = { attr = "sct.__version__" }

[tool.pylint.MASTER]
fail-under = 8.5
fail-on = ["unused-import"]

[tool.pylint."MESSAGES CONTROL"]
disable = ["import-error", "logging-fstring-interpolation", "logging-not-lazy"]

[tool.pylint.FORMAT]
max-line-length = 120

[tool.black]
line-length = 120
target-version = ["py310", "py311", "py312"]

[tool.isort]
profile = "black"
line_length = 120
